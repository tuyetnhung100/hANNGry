@model Story1.Models.ViewModels.ChangePasswordViewModel

@*
    Programmer: Nina Hoang
    Class: CIS234A
    Date: 11/17/2019
    Purpose: To create a web gui for user account change password page.
*@

<html>
<head>
    <title>Change My Password</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
            background-image: url('../../Content/HTML/clover.PNG');
            background-repeat: no-repeat;
            background-position: center center;
            background-size: cover;
            margin: auto;
        }
        /* Set a purple color and float the text of the "errMsg" class to the right */
        span.errMsg {
            float: right;
            color: #3733FF;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <form action="/Home/ChangePassword" method="post">
        <h1>Change Password</h1>
        <p><a href="/Home/UserAccount">Return to Account Settings</a></p><br />

        <fieldset>
            <legend><b>As requested, @Model.name please enter your new password below:</b></legend>
            <p>
                <label for="psw"><b>@Html.LabelFor(model => model.psw)</b></label> &emsp;&emsp;&emsp;&nbsp;
                <span class="errMsg">@Html.ValidationMessageFor(model => model.psw, "")</span>
                @Html.EditorFor(model => model.psw, new { htmlAttributes = new { placeholder = "Enter Password", type = "password" } })
            </p>
            <p>
                <label for="pswRepeat"><b>@Html.LabelFor(model => model.pswRepeat)</b></label>
                <span class="errMsg">@Html.ValidationMessageFor(model => model.pswRepeat, "")</span>
                @Html.EditorFor(model => model.pswRepeat, new { htmlAttributes = new { placeholder = "Repeat Password", type = "password" } })
            </p>
            <p><button type="submit" class="resetbtn">Reset</button></p>
        </fieldset>
    </form>


    @Html.ValidationSummary(true, "")

    @section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
    }

    @{
        // Prompt a message to confirm password reset
        if (Model != null)
        {
            if (!string.IsNullOrWhiteSpace(Model.message))
            {
                <script>
                    Swal.fire({
                        title: '@Model.message',
                        text:  'Your password has been reset',
                        type:  'success',
                        onClose: function () {
                            location.href = '/Home/UserAccount';
                        }
                    });
                </script>
            }
            if (!string.IsNullOrWhiteSpace(Model.errMessage))
            {
                <script>
                    Swal.fire({
                        title: 'Reset failed',
                        text:  '@Model.errMessage',
                        type:  'error'
                    });
                </script>
            }
        }
    }

</body>
</html>


