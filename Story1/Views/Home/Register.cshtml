@model Story1.Models.ViewModels.RegisterViewModel

@*
    Programmer: Nina Hoang
    Class: CIS234A
    Date: 10/16/2019
    Purpose: This code creates a web gui for user account creation.
*@

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }

        * {
            box-sizing: border-box;
        }

        /* Add padding to containers */
        .container {
            padding: 16px;
            background-color: #80ced6;
        }

        /* Full-width input fields */
        input[type=text], input[type=password], input[type=email], input[type=tel] {
            width: 100%;
            padding: 15px;
            margin: 5px 0 22px 0;
            display: inline-block;
            border: none;
            background: #f1f1f1;
        }

            input[type=text]:focus, input[type=password]:focus {
                background-color: #ddd;
                outline: none;
            }

        /* Overwrite default styles of hr */
        hr {
            border: 1px solid #f1f1f1;
            margin-bottom: 25px;
        }

        /* Set a style for the register button */
        .registerbtn {
            background-color: #50394c;
            color: white;
            padding: 16px 20px;
            margin: 8px 0;
            border: none;
            cursor: pointer;
            width: 100%;
            opacity: 0.9;
        }

            .registerbtn:hover {
                opacity: 1;
            }

        /* Add a blue text color to links */
        a {
            color: dodgerblue;
        }

        /* Set a grey background color and center the text of the "sign in" section */
        .signin {
            background-color: #f1f1f1;
            text-align: center;
        }

        /* Set a red color and float the text of the "errMsg" class to the right */
        span.errMsg {
            float: right;
            color: red;
        }
    </style>
</head>
<body>
    <form method="post" action="/Home/Register">
        <div class="container">
            <h1>PCC Panther Pantry Register</h1>
            <p>Please fill in this form to create an account.</p>
            <hr>

            <label for="username"><b>@Html.LabelFor(model => model.username)</b></label>
            <span class="errMsg">@Html.ValidationMessageFor(model => model.username, "")</span>
            @Html.EditorFor(model => model.username, new { htmlAttributes = new { placeholder = "Enter Username", autofocus = "" } })

            <label for="email"><b>@Html.LabelFor(model => model.email)</b></label>
            <span class="errMsg">@Html.ValidationMessageFor(model => model.email, "")</span>
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { placeholder = "Enter Email", type = "email" } })

            <label for="phone"><b>@Html.LabelFor(model => model.phoneNbr)</b></label>
            <span class="errMsg">@Html.ValidationMessageFor(model => model.phoneNbr, "")</span>
            @Html.EditorFor(model => model.phoneNbr, new { htmlAttributes = new { placeholder = "Enter Phone Number", type = "tel" } })

            <label for="psw"><b>@Html.LabelFor(model => model.psw)</b></label>
            <span class="errMsg">@Html.ValidationMessageFor(model => model.psw, "")</span>
            @Html.EditorFor(model => model.psw, new { htmlAttributes = new { placeholder = "Enter Password", type = "password" } })

            <label for="pswRepeat"><b>@Html.LabelFor(model => model.pswRepeat)</b></label>
            <span class="errMsg">@Html.ValidationMessageFor(model => model.pswRepeat, "")</span>
            @Html.EditorFor(model => model.pswRepeat, new { htmlAttributes = new { placeholder = "Repeat Password", type = "password" } })

            <label for="name"><b>@Html.LabelFor(model => model.name)</b></label>
            <span class="errMsg">@Html.ValidationMessageFor(model => model.name, "")</span>
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { placeholder = "Enter Name" } })
            <hr>
            <p>By creating an account you agree to our <a href="#">Terms & Privacy</a>.</p>

            <button type="submit" class="registerbtn">Register</button>
        </div>

        <div class="container signin">

            <p>Already have an account? <a href="Login">Sign in</a>.</p>
        </div>
    </form>



    @Html.ValidationSummary(true, "")

    @section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
    }

    @{
        // Prompt an informational message box for when user tries to create an account
        if (Model != null)
        {
            if (!string.IsNullOrWhiteSpace(Model.message))
            {
                <script>
                    Swal.fire({
                        title: '@Model.message',
                        text:  'Welcome @Model.name! Please confirm your email to activate the account.',
                        type:  'success',
                        onClose: function () {
                            location.href = '/Home/Login';
                        }
                    });
                </script>
            }
            if (!string.IsNullOrWhiteSpace(Model.errMessage))
            {
                <script>
                    Swal.fire({
                        title: 'Register failed',
                        text:  '@Model.errMessage',
                        type:  'error'
                    });
                </script>
            }
        }
    }
</body>
</html>
